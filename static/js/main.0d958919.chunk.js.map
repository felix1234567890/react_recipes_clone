{"version":3,"sources":["components/Recipe.js","components/RecipeSearch.js","components/RecipeList.js","components/RecipeDetails.js","App.js","serviceWorker.js","index.js"],"names":["Recipe","_this$props$recipe","this","props","recipe","image_url","title","source_url","publisher","handleDetails","recipe_id","react_default","a","createElement","Fragment","className","src","alt","style","height","type","onClick","href","target","rel","Component","RecipeSearch","_this$props","value","handleChange","handleSubmit","onSubmit","htmlFor","name","placeholder","vaule","onChange","RecipeList","recipes","error","RecipeSearch_RecipeSearch","map","Recipe_Recipe","key","RecipeDetails","state","id","url","fetch","data","json","setState","console","log","_context","t0","_this$state$recipe","publisher_url","ingredients","handleIndex","item","i","App","baseUrl","details_id","pageIndex","search","query","displayPage","index","RecipeList_RecipeList","_this","RecipeDetails_RecipeDetails","e","preventDefault","_this$state","concat","getRecipes","length","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d958919.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Recipe extends Component {\n  render() {\n    const {\n      image_url,\n      title,\n      source_url,\n      publisher,\n      recipe_id\n    } = this.props.recipe;\n    const { handleDetails } = this.props;\n    return (\n      <React.Fragment>\n        <div className=\"col-10 mx-auto col-md-6 col-lg-4 my-3\">\n          <div className=\"card\">\n            <img\n              src={image_url}\n              className=\"img-card-top\"\n              alt=\"\"\n              style={{ height: \"14rem\" }}\n            />\n            <div className=\"card-body\">\n              <h6>{title}</h6>\n              <h6 className=\"text-warning text-slanted\">\n                provided by {publisher}\n              </h6>\n            </div>\n            <div className=\"card-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={handleDetails}\n              >\n                Details\n              </button>\n              <a\n                href={source_url}\n                className=\"btn btn-success mx-2\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {\" \"}\n                Recipe URL\n              </a>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class RecipeSearch extends Component {\n  render() {\n    const { value, handleChange, handleSubmit } = this.props;\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-10 mx-auto col-md-8 mt-4 text-center\">\n              <h1 className=\"text-slanted\">\n                Search for recipe with{\" \"}\n                <strong className=\"text-danger\">Food2Fork</strong>\n              </h1>\n              <form className=\"mt-4\" onSubmit={handleSubmit}>\n                <label htmlFor=\"search\">\n                  Search recipes separated by comma\n                </label>\n                <div className=\"input-group mt-3\">\n                  <input\n                    type=\"text\"\n                    name=\"search\"\n                    placeholder=\"pizza,meat,fish\"\n                    className=\"form-control\"\n                    vaule={value}\n                    onChange={handleChange}\n                  />\n                  <div className=\"input-group-append\">\n                    <button\n                      type=\"submit\"\n                      className=\"input-group-text bg-primary text-white\"\n                    >\n                      <i className=\"fas fa-search\" />\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Recipe from \"./Recipe\";\nimport RecipeSearch from \"./RecipeSearch\";\n\nexport default class RecipeList extends Component {\n  render() {\n    const {\n      recipes,\n      handleDetails,\n      value,\n      handleChange,\n      handleSubmit,\n      error\n    } = this.props;\n    return (\n      <div>\n        <React.Fragment>\n          <RecipeSearch\n            value={value}\n            handleChange={handleChange}\n            handleSubmit={handleSubmit}\n          />\n          <div className=\"container my-5\">\n            <div className=\"row\">\n              <div className=\"col-md-10 mx-auto col-md-6 text-center mb-3\">\n                <h1 className=\"text-slanted\">Recipe list</h1>\n              </div>\n            </div>\n            <div className=\"row\">\n              {error ? (\n                <h1 className=\"text-center text-danger\">{error}</h1>\n              ) : (\n                recipes.map(recipe => (\n                  <Recipe\n                    key={recipe.recipe_id}\n                    recipe={recipe}\n                    handleDetails={() => handleDetails(0, recipe.recipe_id)}\n                  />\n                ))\n              )}\n            </div>\n          </div>\n        </React.Fragment>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class RecipeDetails extends Component {\n  state = {\n    recipe: {},\n  };\n  async componentDidMount() {\n    const id = this.props.id;\n    const url = `https://www.food2fork.com/api/get?key=cf349d087c773f3d4992d99460a8b848&rId=${id}`;\n    try {\n      const data = await fetch(url);\n      const json = await data.json();\n      this.setState({ recipe: json.recipe });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  render() {\n    const {\n      image_url,\n      publisher,\n      publisher_url,\n      source_url,\n      title,\n      ingredients,\n    } = this.state.recipe;\n    const { handleIndex } = this.props;\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-10 mx-auto col-md-6 my-3\">\n              <button\n                type=\"button\"\n                className=\"btn btn-warning mb-5\"\n                onClick={() => handleIndex(1)}\n              >\n                Back to List\n              </button>\n              <img src={image_url} className=\"d-block w-100\" alt=\"\" />\n            </div>\n            <div className=\"col-10 mx-auto col-md-6 my-3\">\n              <h6>{title}</h6>\n              <h6 className=\"text-warning text-slanted\">\n                provided by {publisher}\n              </h6>\n              <a\n                href={publisher_url}\n                target=\"_blank\"\n                className=\"btn btn-primary\"\n              >\n                Publisher web\n              </a>\n              <a\n                href={source_url}\n                target=\"_blank\"\n                className=\"btn btn-success mx-2\"\n              >\n                Recipe URL\n              </a>\n              <ul className=\"list-gorup mt-4\">\n                <h2 className=\"mt-3 mb-4\">Ingredients</h2>\n                {ingredients.map((item, i) => {\n                  return (\n                    <li key={i} className=\"list-group-item text-slanted\">\n                      {item}\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport RecipeList from \"./components/RecipeList\";\nimport RecipeDetails from \"./components/RecipeDetails\";\n\nclass App extends Component {\n  state = {\n    recipes: [],\n    url:\n      \"https://www.food2fork.com/api/search?key=cf349d087c773f3d4992d99460a8b848\",\n    baseUrl:\n      \"https://www.food2fork.com/api/search?key=cf349d087c773f3d4992d99460a8b848\",\n    details_id: 35384,\n    pageIndex: 1,\n    search: \"\",\n    query: \"&q=\",\n    error: \"\",\n  };\n  async getRecipes() {\n    try {\n      const data = await fetch(this.state.url);\n      const json = await data.json();\n      if (json.recipes.length === 0) {\n        this.setState({ error: \"No recipes to show\" });\n      } else {\n        this.setState({ recipes: json.recipes });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  componentDidMount() {\n    this.getRecipes();\n  }\n  displayPage = (index) => {\n    switch (index) {\n      default:\n      case 1:\n        return (\n          <RecipeList\n            recipes={this.state.recipes}\n            handleDetails={this.handleDetails}\n            value={this.state.search}\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n            error={this.state.error}\n          />\n        );\n      case 0:\n        return (\n          <RecipeDetails\n            id={this.state.details_id}\n            handleIndex={this.handleIndex}\n          />\n        );\n    }\n  };\n  handleIndex = (index) => {\n    this.setState({ pageIndex: index });\n  };\n  handleDetails = (index, id) => {\n    this.setState({\n      pageIndex: index,\n      details_id: id,\n    });\n  };\n  handleChange = (e) => {\n    this.setState({\n      search: e.target.value,\n    });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { baseUrl, query, search } = this.state;\n    this.setState(\n      () => {\n        return { url: `${baseUrl}${query}${search}`, search: \"\" };\n      },\n      () => {\n        this.getRecipes();\n      }\n    );\n  };\n  render() {\n    return (\n      <React.Fragment>{this.displayPage(this.state.pageIndex)}</React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}